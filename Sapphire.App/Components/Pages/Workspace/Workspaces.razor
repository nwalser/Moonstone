<WindowLayout>
    <ToolbarRightContent>
        <WindowControls />
    </ToolbarRightContent>
    <ChildContent>
        <MudContainer Class="my-10">
            <MudStack Row="true" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center" Class="mb-3">
                <MudText Typo="Typo.h3">Recent Workspaces</MudText>

                <MudStack Row="true" Spacing="1">
                    <MudButton OnClick="() => OpenWorkspace(create: true)" Variant="Variant.Outlined" Size="Size.Small">New Workspace</MudButton>
                    <MudButton OnClick="() => OpenWorkspace()" Variant="Variant.Outlined" Size="Size.Small">Open Workspace</MudButton>
                </MudStack>
            </MudStack>
            
            <MudGrid Spacing="1">
                @foreach (var recent in DatabaseService.RecentDatabases.Reverse().Take(10))
                {
                    <MudItem xs="12">
                        <MudPaper Outlined="true" Class="p-3">
                            <MudStack Row="true" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
                                <MudStack Row="false" Spacing="1">
                                    <MudText Typo="Typo.h4">@Path.GetFileName(recent)</MudText>
                                    <MudText Typo="Typo.subtitle1">@recent</MudText>
                                </MudStack>

                                <MudStack Row="true" Spacing="1">
                                    <MudIconButton Size="Size.Small" OnClick="() => DatabaseService.RemoveRecent(path: recent)" Variant="Variant.Outlined" Icon="@Icons.Material.Filled.Close"/>
                                    <MudButton Size="Size.Small" OnClick="() => OpenWorkspace(path: recent)" Variant="Variant.Outlined" Disabled="@(!Path.Exists(recent))">Open</MudButton>
                                </MudStack>
                            </MudStack>
                        </MudPaper>
                    </MudItem>
                }
            </MudGrid>
        </MudContainer>
    </ChildContent>
</WindowLayout>

@code {
    [Inject] public required DatabaseService<ProjectDatabase> DatabaseService { get; set; }
    [Inject] public required WindowManager WindowManager { get; set; }
    [Inject] public required Dialog Dialog { get; set; }
    [Inject] public required NavigationManager NavigationManager { get; set; }
    
    
    private async Task OpenWorkspace(string? path = null, bool create = false)
    {
        if (path is null)
        {
            var window = WindowManager.BrowserWindows.Single();
            var selection = await Dialog.ShowOpenDialogAsync(window, new OpenDialogOptions { Properties = [OpenDialogProperty.openDirectory] });
            path = selection.SingleOrDefault();
            
            if (path is null)
                return;
        }

        try
        {
            if (create)
                DatabaseService.Create(path);
            else
                DatabaseService.Open(path);
            
            NavigationManager.NavigateTo("/", forceLoad: true);
        }
        catch (Exception ex)
        {
            Dialog.ShowErrorBox("An error occured", ex.Message);
        }
    }
}