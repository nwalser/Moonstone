<MudStack Row="true" Spacing="4" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
    <MudStack Row="false" Spacing="2" Class="flex-grow">
        <MudStack Row="true" Spacing="2">
            <MudNumericField T="double" Value="Rule.MaximalAllocation.TotalHours" ValueChanged="MaximalAllocationChanged" Format="N2" Label="Maximal Daily Allocation" AdornmentText="h" Adornment="Adornment.End"/>
        </MudStack>
        <MudStack Row="true">
            <MudDatePicker Editable="true" Date="Rule.ActiveFrom?.ToDateTime(TimeOnly.MinValue)" DateChanged="ActiveFromChanged" Label="Active From" Clearable="true" ShowWeekNumbers="true"/>
            <MudDatePicker Editable="true" Date="Rule.ActiveTo?.ToDateTime(TimeOnly.MinValue)" DateChanged="ActiveToChanged" Label="Active Until" Clearable="true" ShowWeekNumbers="true"/>
        </MudStack>
    </MudStack>

    <MudButton Variant="Variant.Outlined" Size="Size.Small" OnClick="Delete">Delete</MudButton>
</MudStack>

@code {
    [CascadingParameter] public required ProjectDatabase Database { get; set; }
    
    [Parameter] public required DailyAllocationRule Rule { get; set; }

    private void ActiveFromChanged(DateTime? date)
    {
        Rule.ActiveFrom = date?.ToDateOnly();
        Database.Update(Rule);
    }

    private void ActiveToChanged(DateTime? date)
    {
        Rule.ActiveTo = date?.ToDateOnly();
        Database.Update(Rule);
    }

    private void MaximalAllocationChanged(double hours)
    {
        Rule.MaximalAllocation = TimeSpan.FromHours(hours);
        Database.Update(Rule);
    }

    private void Delete()
    {
        Rule.Delete(Database);
    }
}