<MudItem xs="12">
    <MudCard Elevation="0" Outlined="true" Class="my-1">
        <MudStack Row="false" Spacing="0">
            <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="0" Class="h-8">
                <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="0" Class="h-full">
                    <FluentDropZone Draggable="true" Droppable="true" Item="Todo" Class="h-full w-8 flex items-center justify-center hover:bg-[var(--mud-palette-lines-default)]">
                        <MudIcon Icon="@Icons.Material.Filled.Sort" Size="Size.Small"/>
                    </FluentDropZone>

                    <div class="sortable-grab h-full w-8 flex items-center justify-center hover:bg-[var(--mud-palette-lines-default)]">
                        <MudIcon Icon="@Icons.Material.Filled.DoubleArrow" Size="Size.Small"/>
                    </div>
                </MudStack>

                <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="0" Class="flex-grow h-full" @onclick="() => _editing = !_editing">
                    <p class="w-96" style="@($"padding-left: {Depth * 12}px")">@Todo.Name</p>
                    <p class="w-12">@Todo.CurrentEstimatedEffort.TotalHours / @Todo.InitialEstimatedEffort.TotalHours</p>
                </MudStack>

                <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="0" Class="h-full">
                    <div class="h-full w-8 flex items-center justify-center hover:bg-[var(--mud-palette-lines-default)]" @onclick="AddSubTodo">
                        <MudIcon Icon="@Icons.Material.Filled.Add" Size="Size.Small"/>
                    </div>
                </MudStack>
            </MudStack>

            @if (_editing)
            {
            <MudGrid Spacing="0">
                <MudItem sm="4">
                    <MudGrid Spacing="1" Class="p-2">
                        <MudItem sm="12">
                            <MudTextField T="string" Value="@Todo.Name" ValueChanged="UpdateName" Label="Name" Immediate="false" />
                        </MudItem>
                        <MudItem sm="6">
                            <MudTextField T="string" Value="@Todo.Name" ValueChanged="UpdateName" Label="Name" Immediate="false" />
                        </MudItem>
                        <MudItem sm="6">
                            <MudTextField T="string" Value="@Todo.Name" ValueChanged="UpdateName" Label="Name" Immediate="false" />
                        </MudItem>
                    </MudGrid>
                </MudItem>
            </MudGrid>
            }
        </MudStack>
    </MudCard>
</MudItem>

@code {
    [CascadingParameter] public required ProjectDatabase Database { get; set; }
    [Parameter] public required TodoAggregate Todo { get; set; }
    [Parameter] public required uint Depth { get; set; }
    [Parameter] public required List<TodoAggregate> ChildTodos { get; set; }

    private bool _editing = false;
    
    private void AddSubTodo()
    {
        var todo = new TodoAggregate
        {
            Name = "New Todo 1",
            ProjectId = Todo.ProjectId,
            ParentId = Todo.Id
        };

        Database.Update(todo);
        InvokeAsync(StateHasChanged);
    }

    private void UpdateName(string? name)
    {
        if (name is null) return;

        Todo.Name = name;
        Database.Update(Todo);
    }
}