@inherits DatabaseRefresh
@page "/project/{ProjectId:guid}"
@page "/project/{ProjectId:guid}/todos"

<DefaultWindowLayout PageTitle="@($"{_project?.Name} - Todos")" ChildContentMaxWidth="MaxWidth.False">
    <MenuContent>
        <ProjectsMenu />
    </MenuContent>
    
    <RibbonRightContent>
        <MudButton OnClick="() => AddRootTodo()" Variant="Variant.Outlined" Size="Size.Small">New Todo</MudButton>
    </RibbonRightContent>

    <ChildContent>
        @if (_project is not null)
        {
            <MudGrid Spacing="1">
                <FluentDragContainer TItem="TodoAggregate" OnDropEnd="OnDropEnd" Class="w-full">
                    <TodoGroup Depth="0" Todos="_todos" Project="_project" TodoId="null"/>
                </FluentDragContainer>
            </MudGrid>
        }
    </ChildContent>
</DefaultWindowLayout>

@code {
    [Parameter] public required Guid ProjectId { get; set; }

    private ProjectAggregate? _project;
    private List<TodoAggregate> _todos = [];

    protected override void OnLoadData()
    {
        _project = Database.Enumerate<ProjectAggregate>()
            .SingleOrDefault(p => p.Id == ProjectId);
        
        _todos = Database.Enumerate<TodoAggregate>()
            .Where(t => t.ProjectId == ProjectId)
            .ToList();
    }

    private void AddRootTodo()
    {
        var todo = new TodoAggregate
        {
            Name = "New Todo",
            ProjectId = ProjectId,
            ParentId = null
        };

        Database.Update(todo);
        InvokeAsync(StateHasChanged);
    }

    private void OnDropEnd(FluentDragEventArgs<TodoAggregate> e)
    {
        // cannot reference itself
        if (e.Source.Item.Id == e.Target.Item.Id) return;

        // cannot reference existing child
        var item = e.Target.Item;
        var parents = new List<TodoAggregate>();
        while (item.ParentId is not null)
        {
            item = _todos.Single(t => t.Id == item.ParentId);
            parents.Add(item);
        }

        if (parents.Any(p => p.Id == e.Source.Item.Id)) return;

        // reference new parent
        e.Source.Item.ParentId = e.Target.Item.Id;
        Database.Update(e.Source.Item);
    }

}