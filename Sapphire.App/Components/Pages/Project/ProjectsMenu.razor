<MudStack Row="false" Spacing="1" Class="p-1">
    @foreach (var project in Database.Enumerate<ProjectAggregate>().OrderByDescending(p => p.Priority))
    {
        <a href="@($"/project/{project.Id}/todos")">
            <MudCard Elevation="0" Outlined="true" Class="p-1"             
                     Style="@Navigation.GetSelectedStyle($"/project/{project.Id}")">
                <MudStack Row="true" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center" Spacing="1">
                    <MudText Typo="Typo.body2">@project.Name</MudText>
                    <MudSpacer />
                    <MudChip Size="Size.Small">@($"{project.GetNumberOfTodos(Database)} Tasks")</MudChip>
                    <MudChip Size="Size.Small">@($"{project.Priority}")</MudChip>
                </MudStack>
            </MudCard>
        </a>
    }

    <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center" Row="true" Spacing="1">
        <MudIconButton Icon="@Icons.Material.Outlined.List" Size="Size.Small" Variant="Variant.Outlined" Href="/project" />
        <MudIconButton Icon="@Icons.Material.Outlined.Add" Size="Size.Small" Variant="Variant.Outlined" OnClick="CreateProject"/>
    </MudStack>
</MudStack>


@code {
    [CascadingParameter] public required ProjectDatabase Database { get; set; }
    [Inject] public required NavigationManager Navigation { get; set; }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
            Navigation.LocationChanged += (_, _) => InvokeAsync(StateHasChanged);
        
        base.OnAfterRender(firstRender);
    }
    
    private void CreateProject()
    {
        var project = new ProjectAggregate
        {
            Name = $"Project {Database.Enumerate<ProjectAggregate>().Count()}",
        };

        Database.Update(project);
        Navigation.NavigateTo($"/project/{project.Id}/todos");
    }
}