<FluentStack Orientation="Orientation.Horizontal" Style="@($"padding-left: {Depth*4}px")">
    <p>@Todo.Name</p>
    <button @onclick="AddSubTodo">Add Subtask</button>
</FluentStack>

@foreach (var childTodo in _childTodos)
{
    <TodoGroup Depth="@(Depth+1)" Todo="@childTodo" />
}

@code {
    [CascadingParameter] public required ProjectDatabase Database { get; set; }
    [CascadingParameter] public required List<TodoAggregate> Todos { get; set; }
    [Parameter] public required TodoAggregate Todo { get; set; }
    [Parameter] public required int Depth { get; set; }

    private List<TodoAggregate> _childTodos = [];

    protected override Task OnParametersSetAsync()
    {
        _childTodos = Todos.Where(t => t.ParentId == Todo.Id).ToList();

        return base.OnParametersSetAsync();
    }

    private void AddSubTodo()
    {
        var todo = new TodoAggregate()
        {
            Name = "New Todo",
            ProjectId = Todo.ProjectId,
            ParentId = Todo.ParentId
        };
        
        Database.Update(todo);
    }

}