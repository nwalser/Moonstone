@inherits LayoutComponentBase
@layout MainLayout

<MudStack Row="false" Justify="Justify.SpaceBetween" Style="height: 100vh; min-width: 200px; border-right: 1px solid var(--mud-palette-lines-default)" Class="pa-2">
    <MudStack Row="false" Spacing="4">
        @{
            @foreach (var (workspaceId, _) in WorkspaceManager.Workspaces)
            {
                <WorkspaceComponent WorkspaceId="workspaceId" Context="workspace">
                    <MudStack Row="false" Spacing="1">
                        <MudStack Row="true" Spacing="1">
                            <MudButton Variant="Variant.Text" Style="font-size: 0.9rem; flex-grow: 1; justify-content: left" Size="Size.Small">@workspaceId</MudButton>
                            <MudIconButton Icon="@Icons.Material.Outlined.Remove" Variant="Variant.Filled" Size="Size.Small" OnClick="() => WorkspaceManager.Close(workspaceId)"/>
                        </MudStack>

                        <MudStack Row="false" Spacing="1">
                            @foreach (var projectIdentity in workspace.EnumerateDocuments<ProjectAggregate>())
                            {
                                <ReaderComponent TDocument="ProjectAggregate" Identity="projectIdentity">
                                    <OnLoad Context="project">
                                        <MudButton Variant="Variant.Filled"
                                                   DisableElevation="true"
                                                   StartIcon="@Icons.Material.Outlined.Info"
                                                   Size="Size.Small"
                                                   Class="button-left-aligned"
                                                   Href="@($"/workspace/{workspaceId}/project/{projectIdentity.Id}")">
                                            @project.Name
                                        </MudButton>
                                    </OnLoad>
                                </ReaderComponent>
                            }
                        </MudStack>
                    </MudStack>
                </WorkspaceComponent>
            }
        }
    </MudStack>
    <MudStack Row="false" Spacing="1">
        <MudButton Variant="Variant.Filled" DisableElevation="true" StartIcon="@Icons.Material.Outlined.Info" Size="Size.Small" OnClick="OpenWorkspace">Open Workspace</MudButton>
        <MudButton Variant="Variant.Filled" DisableElevation="true" StartIcon="@Icons.Material.Outlined.Info" Size="Size.Small" OnClick="CreateWorkspace">Create Workspace</MudButton>
    </MudStack>
</MudStack>


<MudContainer MaxWidth="MaxWidth.False" Style="flex-grow: 1">
    @Body
</MudContainer>


@code {
    [Inject] public required IFolderPicker FolderPicker { get; init; }
    [Inject] public required WorkspaceManager WorkspaceManager { get; init; }
    
    private async Task OpenWorkspace()
    {
        var pickResult = await FolderPicker.PickAsync();

        if (pickResult.IsSuccessful)
        {
            WorkspaceManager.Open(pickResult.Folder.Path);
        }
    }

    private async Task CreateWorkspace()
    {
        var pickResult = await FolderPicker.PickAsync();

        if (pickResult.IsSuccessful)
        {
            WorkspaceManager.Open(pickResult.Folder.Path);
        }
    }
}