@using ChangeName = Amber.Domain.Documents.Project.ChangeName

@page "/projects"

@if (Workspaces.Current is not null)
{
    @foreach (var projectDocument in Workspaces.Current.EnumerateDocuments<ProjectAggregate>())
    {
        var project = Reader.Read(projectDocument);
        
        <MudStack Row="true">
            <MudTextField T="string" Value="@project.Name" ValueChanged="v => Reader.AppendMutation(projectDocument, new ChangeName(v))" Immediate="false" />
            
            <a href="@($"/project/{projectDocument.Id}")">View</a>
        </MudStack>
    }
    
    <MudButton OnClick="() => Workspaces.Current?.Create<ProjectAggregate>()">Add Project</MudButton>
}

@code {
    [Inject] public required Workspaces Workspaces { get; set; }
    [Inject] public required Reader<ProjectAggregate> Reader { get; set; }

    protected override void OnInitialized()
    {
        Workspaces.Current?.ExternalChange.Subscribe(_ => InvokeAsync(StateHasChanged));
        base.OnInitialized();
    }
}